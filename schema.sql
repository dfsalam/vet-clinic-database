/* Database schema to keep the structure of entire database. */

CREATE TABLE animals(
    id INT NOT NULL, 
    name TEXT NOT NULL, 
    date_of_birth DATE, 
    escape_attempts INT, 
    neutered BOOLEAN, 
    weight_kg NUMERIC(4,1)
);
/*Add a column species of type string to your animals table. */
ALTER TABLE animals ADD COLUMN species TEXT;
ALTER TABLE animals ALTER COLUMN species TYPE varchar(255);

/* Milestone 3 
Create a table named owners with the following columns:
id: integer (set it as autoincremented PRIMARY KEY)
full_name: string
age: integer */
CREATE TABLE owners (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    full_name VARCHAR(255),
    age INTEGER
);
/* Create a table named species with the following columns:
id: integer (set it as autoincremented PRIMARY KEY)
name: string */
CREATE TABLE species (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME VARCHAR(255)
);
/* Modify animals table:
Make sure that id is set as autoincremented PRIMARY KEY */
CREATE SEQUENCE animals_id_seq START WITH 11;
ALTER TABLE animals 
ALTER COLUMN id SET DEFAULT nextval('animals_id_seq');

-- Remove column species
ALTER TABLE animals DROP COLUMN species;
/* Add column species_id which is a foreign key referencing species table */
ALTER TABLE animals
ADD COLUMN species_id INTEGER,
ADD CONSTRAINT fk_species
  FOREIGN KEY (species_id)
  REFERENCES species(id);
/* Add column owner_id which is a foreign key referencing the owners table */
ALTER TABLE animals
ADD COLUMN owner_id INTEGER,
ADD CONSTRAINT fk_owner
  FOREIGN KEY (owner_id)
  REFERENCES owners(id);

/* Milestone 4 */
CREATE TABLE vets (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255),
    age INTEGER,
    date_of_graduation DATE
);

CREATE TABLE specializations (
  vet_id INTEGER NOT NULL,
  species_id INTEGER NOT NULL,
  PRIMARY KEY (vet_id, species_id),
  FOREIGN KEY (vet_id) REFERENCES vets(id),
  FOREIGN KEY (species_id) REFERENCES species(id)
);

ALTER TABLE animals ADD CONSTRAINT animals_id_unique UNIQUE (id);

CREATE TABLE visits (
  id SERIAL PRIMARY KEY,
  animals_id INTEGER REFERENCES animals(id),
  vet_id INTEGER REFERENCES vets(id),
  visit_date DATE
);





